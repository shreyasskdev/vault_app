# .github/workflows/release.yml

name: Release App (Android, Windows, Linux)

on:
  push:
    tags:
      - 'v*.*.*'

env:
  FLUTTER_VERSION: '3.32.4'
  RUST_CRATE_PATH: 'rust'

jobs:
  #========================================#
  #        BUILD ANDROID ARTIFACTS         #
  #========================================#
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android

      # CODEGEN STEP REMOVED - We assume the generated files in the repo are correct.

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  #========================================#
  #         BUILD LINUX ARTIFACTS          #
  #========================================#
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # CODEGEN STEP REMOVED

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux release
        run: flutter build linux --release

      - name: Package Linux release as a zip
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../../release-linux.zip .
          cd ../../../../../

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux-zip
          path: release-linux.zip

  #========================================#
  #         BUILD WINDOWS ARTIFACTS        #
  #========================================#
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      # CODEGEN STEP REMOVED

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows release
        run: flutter build windows --release

      - name: Package Windows release as a zip
        run: Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath release-windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows-zip
          path: release-windows.zip

  #========================================#
  #         CREATE GITHUB RELEASE          #
  #========================================#
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android, build-linux, build-windows]
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: List downloaded files (for debugging)
        run: ls -R release-artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            release-artifacts/release-apk/app-release.apk
            release-artifacts/release-linux-zip/release-linux.zip
            release-artifacts/release-windows-zip/release-windows.zip